package edu.kit.aifb.IntelliCloudBench.ui.tree;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Slider;
import com.vaadin.ui.Slider.ValueOutOfBoundsException;

public class MachinesTreeNode extends CustomComponent {
  @AutoGenerated
  private HorizontalLayout mainLayout;

	@AutoGenerated
  private Slider slider_1;

	@AutoGenerated
  private CheckBox checkBox_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = -1085233506266253530L;
	
  private String label;
	private double weight;
	private boolean checked;
	
	public MachinesTreeNode(String label) {
		this(label, 100, false);
	}

	public MachinesTreeNode(String label, double weight, boolean checked) {
	  this.label = label;
	  this.weight = weight;
	  this.checked = checked;
	  
		buildMainLayout();
		setCompositionRoot(mainLayout);
		initLayout();
  }

	private void initLayout() {
		checkBox_1.setValue(checked);
		checkBox_1.setCaption(label);
	  slider_1.setMin(1d);
	  slider_1.setMax(100d);
	  slider_1.setResolution(1);
	  setSlider(weight);
  }

	public String getLabel() {
		return label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public double getWeight() {
		return weight;
	}

	public void setWeight(int weight) {
		this.weight = weight;
	}

	public boolean isChecked() {
		return checked;
	}

	public void setChecked(boolean checked) {
		this.checked = checked;
	}
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MachinesTreeNode() {
		this("Label");
	}

	private void setSlider(double weight) {
	  try {
	    slider_1.setValue(weight);
    } catch (ValueOutOfBoundsException e) {
    	if (e.getValue() > slider_1.getMax()) {
    		try {
	        slider_1.setValue(slider_1.getMax());
        } catch (ValueOutOfBoundsException e1) {
        }
    	} else if (e.getValue() < slider_1.getMin()) {
    		try {
	        slider_1.setValue(slider_1.getMin());
        } catch (ValueOutOfBoundsException e1) {
        }
    	}
    }
  }

	@AutoGenerated
  private HorizontalLayout buildMainLayout() {
	  // common part: create layout
	  mainLayout = new HorizontalLayout();
	  mainLayout.setImmediate(false);
	  mainLayout.setWidth("100%");
	  mainLayout.setHeight("-1px");
	  mainLayout.setMargin(false);
	  mainLayout.setSpacing(true);
	  
	  // top-level component properties
	  setWidth("100.0%");
	  setHeight("-1px");
	  
	  // checkBox_1
	  checkBox_1 = new CheckBox();
	  checkBox_1.setCaption("Region");
	  checkBox_1.setImmediate(false);
	  checkBox_1.setWidth("100.0%");
	  checkBox_1.setHeight("-1px");
	  mainLayout.addComponent(checkBox_1);
	  mainLayout.setExpandRatio(checkBox_1, 0.5f);
	  mainLayout.setComponentAlignment(checkBox_1, new Alignment(33));
	  
	  // slider_1
	  slider_1 = new Slider();
	  slider_1.setEnabled(false);
	  slider_1.setImmediate(false);
	  slider_1.setWidth("90.0%");
	  slider_1.setHeight("-1px");
	  mainLayout.addComponent(slider_1);
	  mainLayout.setExpandRatio(slider_1, 0.5f);
	  mainLayout.setComponentAlignment(slider_1, new Alignment(48));
	  
	  return mainLayout;
  }

}
